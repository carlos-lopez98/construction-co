-- MySQL Script generated by MySQL Workbench
-- Thu May 25 23:57:47 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ContructionCo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ContructionCo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ContructionCo` DEFAULT CHARACTER SET utf8 COLLATE utf8_czech_ci ;
USE `ContructionCo` ;

-- -----------------------------------------------------
-- Table `ContructionCo`.`Contractors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Contractors` (
  `contractor_id` INT NOT NULL,
  `contractor_name` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `phone_number` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  PRIMARY KEY (`contractor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Customers` (
  `customer_id` INT NOT NULL,
  `customer_name` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `phone_number` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Employee Tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Employee Tasks` (
  `task_id` INT NOT NULL,
  `employee_id` VARCHAR(45) NOT NULL,
  `due_date` DATE NULL,
  `status` VARCHAR(45) NULL,
  PRIMARY KEY (`task_id`, `employee_id`),
  CONSTRAINT `task_id`
    FOREIGN KEY (`task_id`)
    REFERENCES `ContructionCo`.`Tasks` (`task_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `employee_id`
    FOREIGN KEY ()
    REFERENCES `ContructionCo`.`Employees` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Employees` (
  `employee_id` INT NOT NULL,
  `first_name` VARCHAR(50) NULL,
  `last_name` VARCHAR(50) NULL,
  `email` VARCHAR(45) NULL,
  `phone_number` VARCHAR(10) NULL,
  `hire_date` VARCHAR(45) NULL,
  `position` VARCHAR(45) NULL,
  PRIMARY KEY (`employee_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Equipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Equipment` (
  `equipment_id` INT NOT NULL,
  `equipment_name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `status` INT NULL,
  PRIMARY KEY (`equipment_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Invoices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Invoices` (
  `invoice_id` INT NOT NULL,
  `due_date` DATE NULL,
  `total_due` INT NULL,
  PRIMARY KEY (`invoice_id`),
  CONSTRAINT `purchase_order_id`
    FOREIGN KEY (`invoice_id`)
    REFERENCES `ContructionCo`.`Purchase Order` (`purchase_order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `customer_id`
    FOREIGN KEY ()
    REFERENCES `ContructionCo`.`Customers` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `contractor_id`
    FOREIGN KEY ()
    REFERENCES `ContructionCo`.`Contractors` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Materials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Materials` (
  `material_id` INT NOT NULL,
  `material_name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `price_per_unit` VARCHAR(45) NULL,
  PRIMARY KEY (`material_id`),
  CONSTRAINT `supplier_id`
    FOREIGN KEY (`material_id`)
    REFERENCES `ContructionCo`.`Suppliers` (`supplier_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Project Equipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Project Equipment` (
  `purchase_order_id` INT NOT NULL,
  `equipment_id` INT NOT NULL,
  PRIMARY KEY (`purchase_order_id`, `equipment_id`),
  INDEX `equipment_id_idx` (`equipment_id` ASC) VISIBLE,
  CONSTRAINT `purchase_order_id`
    FOREIGN KEY (`purchase_order_id`)
    REFERENCES `ContructionCo`.`Purchase Order` (`purchase_order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `equipment_id`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `ContructionCo`.`Equipment` (`equipment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Purchase Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Purchase Order` (
  `purchase_order_id` INT NOT NULL,
  `purchaseorder_name` VARCHAR(50) NULL,
  `budget` INT NULL,
  `status` VARCHAR(45) NULL,
  PRIMARY KEY (`purchase_order_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Purchase Order Materials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Purchase Order Materials` (
  `purchase_order_id` INT NOT NULL,
  `material_id` INT NOT NULL,
  PRIMARY KEY (`purchase_order_id`, `material_id`),
  INDEX `material_id_idx` (`material_id` ASC) VISIBLE,
  CONSTRAINT `purchase_order_id`
    FOREIGN KEY (`purchase_order_id`)
    REFERENCES `ContructionCo`.`Purchase Order` (`purchase_order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `material_id`
    FOREIGN KEY (`material_id`)
    REFERENCES `ContructionCo`.`Materials` (`material_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Suppliers` (
  `supplier_id` INT NOT NULL,
  `supplier_name` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`supplier_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContructionCo`.`Tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ContructionCo`.`Tasks` (
  `task_id` INT NOT NULL,
  `task_name` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `due_date` DATE NULL,
  PRIMARY KEY (`task_id`),
  CONSTRAINT `purchase_order_id`
    FOREIGN KEY (`task_id`)
    REFERENCES `ContructionCo`.`Purchase Order` (`purchase_order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
